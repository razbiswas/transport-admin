{"version":3,"sources":["component/menu/index.tsx","component/sidebar/index.tsx","helper/constants.tsx","component/map/DeckGlView.tsx","component/drivers.tsx","assets/image/svg/marker.svg","component/map/ReactMapGlView.tsx","component/warehouse.tsx","component/map/DeckGLViewLiner.tsx","component/warehouse2.tsx","App.tsx","reportWebVitals.ts","index.tsx","redux/reducers/index.ts"],"names":["Menu","props","toggleMenu","event","isSidebarOpen","state","sliderElement","document","getElementById","driverElement","windowWidth","window","innerWidth","style","width","display","marginLeft","setState","removeProperty","className","onClick","e","role","aria-hidden","href","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","React","Component","Sidebar","to","activeClassName","INITIAL_VIEW_SET","latitude","longitude","zoom","bearing","pitch","MAPBOX_TOKEN","DeckGLView","viewport","this","TransportData","layers","GeoJsonLayer","data","filled","pointRadiusMinPixels","pointRadiusScale","getRadius","f","properties","scalerank","getFillColor","pickable","autoHighlight","ArcLayer","dataTransform","d","features","filter","getSourcePosition","getTargetPosition","geometry","coordinates","getSourceColor","getTargetColor","getWidth","height","parameters","blendFunc","GL","SRC_ALPHA","ONE","ONE_MINUS_DST_ALPHA","blendEquation","FUNC_ADD","onViewportChange","mapStyle","mapboxApiAccessToken","initialViewState","controller","pickingRadius","position","bottom","right","Drivers","type","name","placeholder","ReactMapGlView","project","cx","cy","r","fill","console","log","COORDINATES","CoordinateJson","map","src","MarkerImage","border","Warehouse","DeckGLViewLiner","getColor","start","getSize","search","ScatterplotLayer","radiusScale","getPosition","LineLayer","opacity","end","Warehouse2","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0b6b3acf.chunk.js","sourcesContent":["import React from 'react';\r\nimport './menu.scss';\r\n\r\ntype onClick = React.MouseEvent<HTMLElement>\r\n\r\ninterface menuActionProps {\r\n  toggleMenu?: (event: onClick) => void;\r\n}\r\n\r\ninterface menuBarState {\r\n  isSidebarOpen: Boolean;\r\n}\r\n\r\nclass Menu extends React.Component<menuActionProps, menuBarState> {\r\n\r\n  constructor(props: menuActionProps) {\r\n    super(props)\r\n    this.state = {\r\n      isSidebarOpen: true\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"transport-menu\">\r\n        <header className=\"menu-header\">\r\n          <div onClick={(e) => this.toggleMenu(e)} className=\"left-item\" role=\"button\">\r\n            <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n          </div>\r\n          <div className=\"center-item\">\r\n            <h2 className=\"title\">\r\n              <span className=\"highlightedTitle\">Transport </span>\r\n              Admin Panel\r\n            </h2>\r\n          </div>\r\n          <div className=\"right-item\">\r\n            <div className=\"dropdown show\">\r\n              <a\r\n               href=\"#\"\r\n               role=\"button\"\r\n               id=\"dropdownMenuLink\"\r\n               data-toggle=\"dropdown\"\r\n               aria-haspopup=\"true\"\r\n               aria-expanded=\"false\">\r\n               <i className=\"fa fa-user user-icon\" aria-hidden=\"true\"></i>\r\n              </a>\r\n              <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n                <a className=\"dropdown-item\" href=\"#\">\r\n                  <i className=\"fa fa-cog\" aria-hidden=\"true\"></i>\r\n                  Setting\r\n                  </a>\r\n                <a className=\"dropdown-item\" href=\"#\">\r\n                  <i className=\"fa fa-list\" aria-hidden=\"true\"></i>\r\n                  Other\r\n                </a>\r\n                <a className=\"dropdown-item\" href=\"#\">\r\n                  <i className=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>\r\n                  Logout\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  toggleMenu = (event: onClick) => {\r\n    const { isSidebarOpen } = this.state;\r\n    let sliderElement: any = document.getElementById('transport-sidebar');\r\n    let driverElement: any = document.getElementById('driver-section');\r\n    let windowWidth: number = window.innerWidth;\r\n\r\n    if (isSidebarOpen && windowWidth > 672) {\r\n      sliderElement.style.width = 0;\r\n      sliderElement.style.display = 'none';\r\n      driverElement.style.marginLeft = '20px';\r\n      this.setState({ isSidebarOpen: !isSidebarOpen });\r\n    } else {\r\n      sliderElement.style.removeProperty(\"width\");\r\n      sliderElement.style.removeProperty(\"display\");\r\n      driverElement.style.marginLeft = '260px';\r\n      this.setState({ isSidebarOpen: !isSidebarOpen });\r\n    }\r\n    if (isSidebarOpen && windowWidth < 672) {\r\n      sliderElement.style.width = \"100%\";\r\n      sliderElement.style.display = 'block'\r\n      driverElement.style.marginLeft = '20px';\r\n      this.setState({ isSidebarOpen: !isSidebarOpen });\r\n    } else {\r\n      sliderElement.style.width = 0;\r\n      sliderElement.style.display = 'none';\r\n      driverElement.style.marginLeft = '20px';\r\n      this.setState({ isSidebarOpen: !isSidebarOpen });\r\n    }\r\n    if (!isSidebarOpen && windowWidth > 672) {\r\n      sliderElement.style.removeProperty(\"width\");\r\n      sliderElement.style.removeProperty(\"display\");\r\n      driverElement.style.marginLeft = '260px';\r\n      this.setState({ isSidebarOpen: !isSidebarOpen });\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './sidebar.scss';\r\n\r\nclass Sidebar extends React.Component {\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"transport-sidebar\" id=\"transport-sidebar\">\r\n        <div className=\"sidebar-container\">\r\n          <div className=\"app-big-text\">\r\n            <h2 className=\"transport-text\">Transport</h2>\r\n            <div className=\"sidebar-menu\">\r\n              <ul>\r\n                <li>\r\n                  <NavLink\r\n                      to={'/driver'} activeClassName=\"active-sidebar\">\r\n                      <i id=\"sidebar-icon\" className=\"fa fa-bicycle\" aria-hidden=\"true\"></i>\r\n                      Driver\r\n                  </NavLink >\r\n                </li>\r\n                <li>\r\n                  <NavLink to=\"/Warehouse-1\" activeClassName=\"active-sidebar\">\r\n                    <i id=\"sidebar-icon\" className=\"fa fa-fire\" aria-hidden=\"true\"></i>\r\n                    Warehouse\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink to=\"/Warehouse-2\" activeClassName=\"active-sidebar\">\r\n                    <i id=\"sidebar-icon\" className=\"fa fa-fire\" aria-hidden=\"true\"></i>\r\n                    Salary\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink to=\"/Warehouse-3\" activeClassName=\"active-sidebar\">\r\n                    <i id=\"sidebar-icon\" className=\"fa fa-fire\" aria-hidden=\"true\"></i>\r\n                    Role\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink to=\"/Warehouse-4\" activeClassName=\"active-sidebar\">\r\n                    <i id=\"sidebar-icon\" className=\"fa fa-fire\" aria-hidden=\"true\"></i>\r\n                    Other\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","export const INITIAL_VIEW_SET =  {\r\n    latitude:  23.8103,\r\n    longitude: 90.4125,\r\n    zoom:      10,\r\n    bearing:   0,\r\n    pitch:     0\r\n}\r\n\r\nexport const COLOR_RANGE = [\r\n    [1, 152, 189],\r\n    [73, 227, 206],\r\n    [216, 254, 181],\r\n    [254, 237, 177],\r\n    [254, 173, 84],\r\n    [209, 55, 78]\r\n];\r\n\r\n\r\nexport const MAPBOX_TOKEN = 'pk.eyJ1IjoicmF6Ymlzd2FzIiwiYSI6ImNrajB4cnJ1aTBzdjAzMHRkZWRhb3YxdWkifQ.gcYHq8cI5p5ioImKNGvNlA';","import * as React from 'react'\r\nimport ReactMapGL, {  NavigationControl } from 'react-map-gl';\r\nimport { INITIAL_VIEW_SET, MAPBOX_TOKEN } from '../../helper/constants';\r\nimport DeckGL from '@deck.gl/react';\r\nimport { GeoJsonLayer, LineLayer, ArcLayer } from 'deck.gl';\r\nimport GL from '@luma.gl/constants';\r\nimport { ScatterplotLayer } from 'deck.gl';\r\n\r\n\r\nexport default class DeckGLView extends React.Component <any, any>{\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      viewport: INITIAL_VIEW_SET\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({viewport: INITIAL_VIEW_SET.zoom = 1})\r\n  }\r\n\r\n  render() {\r\n    // Now we are getting sample Json from outside but we will make a own JSON based on common\r\n    const TransportData = 'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_10m_airports.geojson';\r\n\r\n    const layers = [\r\n      new GeoJsonLayer({\r\n        id:                   'transport',\r\n        //                 @ts-ignore\r\n        data:                 TransportData,\r\n        filled:               true,\r\n        pointRadiusMinPixels: 2,\r\n        pointRadiusScale:     2000,\r\n        getRadius:            (f:any) =>  11 - f.properties.scalerank,\r\n        getFillColor:         [55, 114, 223],\r\n        pickable:             true,\r\n        autoHighlight:        true,\r\n      }),\r\n      new ArcLayer({\r\n        id:                'arcs',\r\n        data:              TransportData,\r\n        //                 @ts-ignore\r\n        dataTransform:     (d: any) => d.features.filter((f: any) => f.properties.scalerank < 4),\r\n        getSourcePosition: f => [-0.4531566, 51.4709959],\r\n        getTargetPosition: (f: any) => f.geometry.coordinates,\r\n        getSourceColor:    [241, 96, 73],\r\n        getTargetColor:    [55, 114, 223],\r\n        getWidth:          1\r\n      })\r\n  ];\r\n    return (\r\n      <ReactMapGL\r\n       {...this.state.viewport}\r\n       width=\"75vw\"\r\n       height=\"50vh\"\r\n       parameters={{\r\n        blendFunc: [GL.SRC_ALPHA, GL.ONE, GL.ONE_MINUS_DST_ALPHA, GL.ONE],\r\n        blendEquation: GL.FUNC_ADD\r\n        }}\r\n       onViewportChange={viewport => this.setState({viewport})}\r\n       mapStyle='mapbox://styles/razbiswas/ckj10rq0l1g4k1aruildzqtqb'\r\n       mapboxApiAccessToken={MAPBOX_TOKEN}>\r\n        <DeckGL\r\n         initialViewState={INITIAL_VIEW_SET}\r\n         controller={true}\r\n         pickingRadius={5}\r\n         layers={layers}>\r\n        </DeckGL>\r\n        <div style={{ position: 'absolute', bottom:20, right: 0 }}>\r\n          <NavigationControl />\r\n        </div>\r\n      </ReactMapGL>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport DummyMapImage from '../assets/dummy-map.png'\r\nimport './drivers.scss';\r\nimport DeckGLView from './map/DeckGlView';\r\nimport ReactMapGlView from './map/ReactMapGlView';\r\n\r\nclass Drivers extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"driver-section\" id=\"driver-section\">\r\n        <div className=\"driver-container\">\r\n          <div className=\"row mb-3 cdbd-input-row\">\r\n            <div className=\"row-wrap\">\r\n              <p className=\"driver-input-text\">Choose a driver enter CDBD</p>\r\n            </div>\r\n            <div>\r\n              <input type=\"text\" id=\"cdbdNumber\" name=\"cdbdNumber\" className=\"driver-cdbd-input\" placeholder=\"123456\" />\r\n            </div>\r\n          </div>\r\n          <DeckGLView/>\r\n          {/* <ReactMapGlView/> */}\r\n\r\n          {/* <img src={DummyMapImage} alt=\"map\"/> */}\r\n          <div className=\"row map-destination-wrap pb4\">\r\n            <div className=\"row-wrap\">\r\n              <p className=\"router-map-text\">\r\n                <i className=\"fa fa-map pr-2 router-map-icon\" aria-hidden=\"true\"></i>\r\n                Daily Router map\r\n              </p>\r\n            </div>\r\n            <div className=\"row-wrap\">\r\n              <button className=\"button\">\r\n                Next Destination\r\n                <i className=\"fa fa-chevron-right pl-2\" aria-hidden=\"true\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"row input-areas\">\r\n            <div className=\"col\">\r\n              <div className=\"row-wrap\">\r\n                <p className=\"expected-actual-text\">Expected Travel Distance:</p>\r\n                <input type=\"text\" id=\"cdbdNumber\" className=\"route-imput\" placeholder=\"12\" />\r\n                <span className=\"ml-1\">KM</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"row-wrap\">\r\n                <p className=\"expected-actual-text\">Expected Travel Distance:</p>\r\n                <input type=\"text\" id=\"cdbdNumber\" className=\"route-imput\" placeholder=\"12\" />\r\n                <span className=\"ml-1\">KM</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row input-areas\">\r\n            <div className=\"col\">\r\n              <div className=\"row-wrap\">\r\n                <p className=\"expected-actual-text\">Expected Travel Time:</p>\r\n                <input type=\"text\" id=\"cdbdNumber\" className=\"route-imput\" placeholder=\"12\" />\r\n                <span className=\"ml-1\">KM</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"row-wrap\">\r\n                <p className=\"expected-actual-text\">Actual Travel Distance:</p>\r\n                <input type=\"text\" id=\"cdbdNumber\" className=\"route-imput\" placeholder=\"12\" />\r\n                <span className=\"ml-1\">Mins</span>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Drivers;\r\n","export default __webpack_public_path__ + \"static/media/marker.39ae4ef9.svg\";","import * as React from 'react'\r\nimport ReactMapGL, { Marker, NavigationControl, SVGOverlay } from 'react-map-gl';\r\nimport { INITIAL_VIEW_SET, MAPBOX_TOKEN } from '../../helper/constants';\r\nimport CoordinateJson from './data.json'\r\nimport MarkerImage from '../../assets/image/svg/marker.svg'\r\nimport { Viewport } from 'deck.gl';\r\n\r\nexport default class ReactMapGlView extends React.Component <any, any>{\r\n\r\n    constructor(props: any) {\r\n      super(props)\r\n      this.state = {\r\n        viewport: {\r\n          latitude:  23.8103,\r\n          longitude: 90.4125,\r\n          zoom:      10,\r\n          bearing:   0,\r\n          pitch:     0\r\n        }\r\n\r\n      }\r\n    }\r\n  \r\n    redraw({project}: any) {\r\n      const [cx, cy] = project([23, 90]);\r\n      return <circle cx={cx} cy={cy} r={4} fill=\"blue\"/>;\r\n    }\r\n\r\n    render () {\r\n      console.log(this.state.viewport)\r\n        const COORDINATES = CoordinateJson\r\n        return (\r\n          <ReactMapGL\r\n            {...this.state.viewport}\r\n            width=\"75vw\"\r\n            height=\"50vh\"\r\n            onViewportChange={viewport => this.setState({viewport})}\r\n            // mapStyle='mapbox://styles/razbiswas/ckj10rq0l1g4k1aruildzqtqb'\r\n            mapboxApiAccessToken={MAPBOX_TOKEN}>\r\n              {\r\n                COORDINATES.map(data => {\r\n                  return (<Marker\r\n                   key={data.id}\r\n                   latitude={data.geometry.coordinates[0]}\r\n                   longitude={data.geometry.coordinates[1]}>\r\n                      <img src={MarkerImage} style={{border: 'none'}}/>\r\n                  </Marker>)\r\n                })\r\n              }\r\n\r\n              <div style={{ position: 'absolute', bottom:20, right: 0 }}>\r\n                <NavigationControl />\r\n              </div>\r\n                {/* <SVGOverlay redraw={this.redraw} /> */}\r\n            </ReactMapGL>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport DummyMapImage from '../assets/dummy-map.png'\r\nimport './drivers.scss';\r\nimport DeckGLView from './map/DeckGlView';\r\nimport ReactMapGlView from './map/ReactMapGlView';\r\n\r\nclass Warehouse extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"driver-section\" id=\"driver-section\">\r\n        <div className=\"driver-container\">\r\n          <div className=\"row mb-3 cdbd-input-row\">\r\n            <div className=\"row-wrap\">\r\n              <p className=\"driver-input-text\">Enter warehouse name</p>\r\n            </div>\r\n            <div>\r\n              <input type=\"text\" id=\"cdbdNumber\" name=\"cdbdNumber\" className=\"driver-cdbd-input\" placeholder=\"123456\" />\r\n            </div>\r\n          </div>\r\n          {/* <DeckGLView/> */}\r\n          <ReactMapGlView/>\r\n\r\n          {/* <img src={DummyMapImage} alt=\"map\"/> */}\r\n          <div className=\"row map-destination-wrap pb4\">\r\n            <div className=\"row-wrap\">\r\n              <p className=\"router-map-text\">\r\n                <i className=\"fa fa-map pr-2 router-map-icon\" aria-hidden=\"true\"></i>\r\n                Daily Router map\r\n              </p>\r\n            </div>\r\n            <div className=\"row-wrap\">\r\n              <button className=\"button\">\r\n                Next Destination\r\n                <i className=\"fa fa-chevron-right pl-2\" aria-hidden=\"true\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"row input-areas\">\r\n            <div className=\"col\">\r\n              <div className=\"row-wrap\">\r\n                <p className=\"expected-actual-text\">Expected Travel Distance:</p>\r\n                <input type=\"text\" id=\"cdbdNumber\" className=\"route-imput\" placeholder=\"12\" />\r\n                <span className=\"ml-1\">KM</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"row-wrap\">\r\n                <p className=\"expected-actual-text\">Expected Travel Distance:</p>\r\n                <input type=\"text\" id=\"cdbdNumber\" className=\"route-imput\" placeholder=\"12\" />\r\n                <span className=\"ml-1\">KM</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row input-areas\">\r\n            <div className=\"col\">\r\n              <div className=\"row-wrap\">\r\n                <p className=\"expected-actual-text\">Expected Travel Time:</p>\r\n                <input type=\"text\" id=\"cdbdNumber\" className=\"route-imput\" placeholder=\"12\" />\r\n                <span className=\"ml-1\">KM</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"row-wrap\">\r\n                <p className=\"expected-actual-text\">Actual Travel Distance:</p>\r\n                <input type=\"text\" id=\"cdbdNumber\" className=\"route-imput\" placeholder=\"12\" />\r\n                <span className=\"ml-1\">Mins</span>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Warehouse;\r\n","import * as React from 'react'\r\nimport ReactMapGL, {  NavigationControl } from 'react-map-gl';\r\nimport { INITIAL_VIEW_SET, MAPBOX_TOKEN } from '../../helper/constants';\r\nimport DeckGL from '@deck.gl/react';\r\nimport { GeoJsonLayer, LineLayer, ArcLayer } from 'deck.gl';\r\nimport GL from '@luma.gl/constants';\r\nimport { ScatterplotLayer } from 'deck.gl';\r\n\r\n\r\nexport default class DeckGLViewLiner extends React.Component <any, any>{\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      viewport: {\r\n        latitude:  69.900118,\r\n        longitude: 17.5505,\r\n        zoom:      15,\r\n        bearing:   0,\r\n        pitch:     0\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // Now we are getting sample Json from outside but we will make a own JSON based on common\r\n    const AirportJson   = 'https://raw.githubusercontent.com/visgl/deck.gl-data/master/examples/line/airports.json';\r\n    const FlightJson    = 'https://raw.githubusercontent.com/visgl/deck.gl-data/master/examples/line/heathrow-flights.json';\r\n\r\n    const layers = [\r\n          new ScatterplotLayer({\r\n        id: 'scatter',\r\n        // @ts-ignore\r\n        data: AirportJson,\r\n        radiusScale: 20,\r\n        getPosition: (d: any) => d.coordinates,\r\n        getFillColor: [255, 140, 0],\r\n        getRadius: (d: any) => this.getSize(d.type),\r\n        pickable: true\r\n      }),\r\n      new LineLayer({\r\n        id: 'line-layer',\r\n        data: FlightJson,\r\n        pickable: true,\r\n        opacity: 1,\r\n        getSourcePosition: (d: any) => d.start,\r\n        getTargetPosition: (d: any) => d.end,\r\n         // @ts-ignore\r\n        getColor: (d: any) => this.getColor(d),\r\n        getWidth: 3\r\n      })\r\n  ];\r\n    return (\r\n      <ReactMapGL\r\n       {...this.state.viewport}\r\n       width=\"75vw\"\r\n       height=\"50vh\"\r\n       parameters={{\r\n        blendFunc: [GL.SRC_ALPHA, GL.ONE, GL.ONE_MINUS_DST_ALPHA, GL.ONE],\r\n        blendEquation: GL.FUNC_ADD\r\n        }}\r\n       onViewportChange={viewport => this.setState({viewport})}\r\n       mapStyle='mapbox://styles/razbiswas/ckj10rq0l1g4k1aruildzqtqb'\r\n       mapboxApiAccessToken={MAPBOX_TOKEN}>\r\n        <DeckGL\r\n         initialViewState={INITIAL_VIEW_SET}\r\n         controller={true}\r\n         pickingRadius={5}\r\n         layers={layers}>\r\n        </DeckGL>\r\n        <div style={{ position: 'absolute', bottom:20, right: 0 }}>\r\n          <NavigationControl />\r\n        </div>\r\n      </ReactMapGL>\r\n    );\r\n  }\r\n\r\n  private getColor = (d: any) : Array<number> => {\r\n    const z = d.start[2];\r\n    const r = z / 10000;\r\n    return [255 * (1 - r * 2), 128 * r, 255 * r, 255 * (1 - r)];\r\n  }\r\n\r\n  private getSize = (type: any) : number =>  {\r\n    if (type.search('major') >= 0) {\r\n      return 100;\r\n    }\r\n    if (type.search('small') >= 0) {\r\n      return 30;\r\n    }\r\n    return 60;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport DummyMapImage from '../assets/dummy-map.png'\r\nimport './drivers.scss';\r\nimport DeckGLView from './map/DeckGlView';\r\nimport DeckGLViewLiner from './map/DeckGLViewLiner';\r\nimport ReactMapGlView from './map/ReactMapGlView';\r\n\r\nclass Warehouse2 extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"driver-section\" id=\"driver-section\">\r\n        <div className=\"driver-container\">\r\n          <div className=\"row mb-3 cdbd-input-row\">\r\n            <div className=\"row-wrap\">\r\n              <p className=\"driver-input-text\">Enter warehouse name</p>\r\n            </div>\r\n            <div>\r\n              <input type=\"text\" id=\"cdbdNumber\" name=\"cdbdNumber\" className=\"driver-cdbd-input\" placeholder=\"123456\" />\r\n            </div>\r\n          </div>\r\n          <DeckGLViewLiner/>\r\n\r\n          <div className=\"row map-destination-wrap pb4\">\r\n            <div className=\"row-wrap\">\r\n              <p className=\"router-map-text\">\r\n                <i className=\"fa fa-map pr-2 router-map-icon\" aria-hidden=\"true\"></i>\r\n                Daily Router map\r\n              </p>\r\n            </div>\r\n            <div className=\"row-wrap\">\r\n              <button className=\"button\">\r\n                Next Destination\r\n                <i className=\"fa fa-chevron-right pl-2\" aria-hidden=\"true\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"row input-areas\">\r\n            <div className=\"col\">\r\n              <div className=\"row-wrap\">\r\n                <p className=\"expected-actual-text\">Expected Travel Distance:</p>\r\n                <input type=\"text\" id=\"cdbdNumber\" className=\"route-imput\" placeholder=\"12\" />\r\n                <span className=\"ml-1\">KM</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"row-wrap\">\r\n                <p className=\"expected-actual-text\">Expected Travel Distance:</p>\r\n                <input type=\"text\" id=\"cdbdNumber\" className=\"route-imput\" placeholder=\"12\" />\r\n                <span className=\"ml-1\">KM</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row input-areas\">\r\n            <div className=\"col\">\r\n              <div className=\"row-wrap\">\r\n                <p className=\"expected-actual-text\">Expected Travel Time:</p>\r\n                <input type=\"text\" id=\"cdbdNumber\" className=\"route-imput\" placeholder=\"12\" />\r\n                <span className=\"ml-1\">KM</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"row-wrap\">\r\n                <p className=\"expected-actual-text\">Actual Travel Distance:</p>\r\n                <input type=\"text\" id=\"cdbdNumber\" className=\"route-imput\" placeholder=\"12\" />\r\n                <span className=\"ml-1\">Mins</span>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Warehouse2;\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Menu from './component/menu';\r\nimport Sidebar from './component/sidebar';\r\nimport Driver from './component/drivers';\r\nimport Warehouse from './component/warehouse';\r\nimport Warehouse2 from './component/warehouse2';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n      <div className=\"transport-app\">\r\n        <Menu/>\r\n        <Sidebar/>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Driver/>\r\n          </Route>\r\n          <Route exact path=\"/driver\">\r\n            <Driver />\r\n          </Route>\r\n          <Route exact path=\"/Warehouse-1\">\r\n            <Warehouse/>\r\n          </Route>\r\n          <Route exact path=\"/Warehouse-2\">\r\n            <Warehouse2/>\r\n          </Route>\r\n          <Route exact path=\"/Warehouse-3\">\r\n            <Warehouse />\r\n          </Route>\r\n          <Route exact path=\"/Warehouse-4\">\r\n            <Driver />\r\n          </Route>\r\n        </Switch>\r\n\r\n      </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport './scss/App.scss'\r\nimport { Provider } from 'react-redux';\r\nimport reducer from './redux/reducers'\r\nimport { createStore } from 'redux';\r\n\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App/>\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// Note: return default state for now when reducer will implemented we will remove that\r\nexport default function defaultReducer(state = []) {\r\n    return state\r\n}"],"sourceRoot":""}